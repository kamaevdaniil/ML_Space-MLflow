version: '3.7'

services:
  #JUPYTER MLFLOW CLIENT + CODE
  notebook:
    build:
      context: ./docker/nootebook_ML_client
    ports:
      - ${JN_PORT}
      - ${JN_ML_PORT}
      - ${JN_POSTGRES_PORT}

    volumes:
          - ./myapp/:/home/jovyan/app
    depends_on: 
      - mlflow
      - ftpd_server
    environment: 
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      #переменная для sudo в  jupyter не рекомендую ставить
      GRANT_SUDO: ${GRANT_SUDO}
      # имя текущего юзер внутри тетрадки тоесть jovyan
      # NB_USER: 'root'
    # command: mlflow ui -p 5000 --host 0.0.0.0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - notebook_network

  #REMOTE SERVER
  mlflow:
    build: 
      context: ./docker/mlflow_remote_server_postgres_ftp
      args:
          UNAME: jovyan
          UID: 1000
          GID: 100   

    container_name: mlflow

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

    ports: 
      - ${RM_MLFLOW_PORT}
    volumes:
      - ./myapp/mlruns:/home/jovyan/app/mlruns
    depends_on:
      - postgres
    networks:
      - notebook_network



  #FTP SERVER собираю из образа без Dockerfile
  ftpd_server:
    image: stilliard/pure-ftpd:latest
    container_name: ftpd_server
    environment:
        FTP_USER_NAME: ${FTP_USER_NAME}
        FTP_USER_PASS: ${FTP_USER_PASS}
        FTP_USER_HOME: ${FTP_USER_HOME}
        PUBLICHOST: ${PUBLICHOST}
        MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
    ports:
      - ${FTP_PORTS}
      - ${FTP_PORTS_2}
    volumes:
      # - ./jupyter-notebook-docker/project/ftp:/home/ftpusers\
      - ./docker/ftp_artifact_store/:/home/ftpusers
    networks:
      - notebook_network



  postgres:
    user: postgres
    build:
      context: ./docker/postgresql_backend_store

    restart: always

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGHOST: ${PGHOST}
      PGDATA: ${PGDATA}
      POSTGRES_DB: ${POSTGRES_DB}

    ports: 
      - ${POSTGRES_PORT}
    volumes:
      - ./myapp/voluem_store:/var/lib/postgresql/data
    networks:
      - notebook_network
    



networks:
  notebook_network:
    name: notebook_network