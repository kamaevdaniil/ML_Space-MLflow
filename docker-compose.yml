version: '3.7'

services:
  #JUPYTER MLFLOW CLIENT + CODE
  notebook:
    env_file:
    - notebook_remote.env
    build:
      context: ./docker/nootebook_ML_client
      
    environment: 
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}

      #переменная для sudo в  jupyter не рекомендую ставить
      GRANT_SUDO: 'yes'
      # имя текущего юзер внутри тетрадки тоесть jovyan
      # NB_USER: 'root'
      # command: mlflow ui -p 5000 --host 0.0.0.0
      extra_hosts: "host.docker.internal:host-gateway"
      # networks:
      #   - notebook_network
    ports:
      - ${JN_PORT}
      - ${JN_ML_PORT}
    volumes:
          - ./myapp/:/home/jovyan/app

    depends_on: 
      - mlflow

 

  #REMOTE SERVER
  mlflow:
    build: 
      context: ./docker/mlflow_remote_server

      args:
        MLFLOW_SERVER_FILE: "file:///home/jovyan/app/mlruns"
        UNAME: jovyan
        UID: 1000
        GID: 100      

    container_name: mlflow
    # environment:
    #   # - HOST_IP = localhost
    #   # - BACKEND_URI =sqlite:////app/mlruns.db 
    #   # - GUNICORN_CMD_ARGS="--bind=0.0.0.0"
    #   - ARTIFACT_ROOT = ftp://mlflow:mlflow_password@localhost/data
    ports:
      - "5001:5000"
    volumes:
      - ./myapp/mlruns:/home/jovyan/app/mlruns
    # depends_on:
    #   - postgres
    # networks:
    #   - notebook_network


#   #FTP SERVER собираю из образа без Dockerfile
#   ftpd_server:
#     image: stilliard/pure-ftpd:latest
#     container_name: ftpd_server
#     environment:
#       - FTP_USER_NAME=mlflow
#       - FTP_USER_PASS=mlflow_password
#       - FTP_USER_HOME=/home/ftpusers/mlflow
#       - PUBLICHOST=localhost
#       - MLFLOW_TRACKING_URI = 'http://mlflow:5000'
#     ports:
#       - "21:21"
#       - "30000-30009:30000-30009"
#     volumes:
#       # - ./jupyter-notebook-docker/project/ftp:/home/ftpusers\
#       - ./docker/ftp_artifact_store/:/home/ftpusers
#     networks:
#       - notebook_network



#   postgres:
#     user: postgres
#     build:
#       context: ./docker/postgresql_backend_store

#     restart: always

#     environment:
#       POSTGRES_USER: 'admin'
#       POSTGRES_PASSWORD: 'secret'

#     ports: 
#       - "5432:5432"
#     volumes:
#       - ./myapp/voluem_store:/var/lib/postgresql/data
#     networks:
#       - notebook_network
    



# networks:
#   notebook_network:
#     name: notebook_network